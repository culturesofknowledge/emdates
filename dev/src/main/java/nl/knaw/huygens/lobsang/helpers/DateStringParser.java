package nl.knaw.huygens.lobsang.helpers;

import nl.knaw.huygens.lobsang.api.YearMonthDay;
import nl.knaw.huygens.lobsang.core.parsers.ParseException;
import nl.knaw.huygens.lobsang.core.parsers.RomanDateParser;
import nl.knaw.huygens.lobsang.iso8601.Iso8601Date;
import nl.knaw.huygens.lobsang.iso8601.Iso8601ParserHelper;
import nl.knaw.huygens.lobsang.iso8601.UnsupportedIso8601DateException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class DateStringParser {
  private static final Logger LOG = LoggerFactory.getLogger(DateStringParser.class);

  public static Iso8601Date parse(String dateString) throws UnsupportedDateException {

    try {
      return Iso8601ParserHelper.parse(dateString);
    } catch (UnsupportedIso8601DateException e) {
      try {
        return romanToIso8601(dateString);
      } catch (ParseException pe) {
        throw new UnsupportedDateException(dateString, e, pe);
      }
    }
  }

  private static Iso8601Date romanToIso8601(String dateString)
      throws ParseException {
    YearMonthDay yearMonthDay = null;
    try {
      yearMonthDay = RomanDateParser.parse(dateString);
      return Iso8601ParserHelper.parse(yearMonthDay.asIso8601String());
    } catch (UnsupportedIso8601DateException ex) {
      // This should not happen.
      // Iso8601ParserHelper should be able to parse any date string generated by RomanDateParser

      // YearMonthDay cannot be null, because this exception is thrown by Iso8601ParserHelper.parse,
      // that is after the variable yearMonthDay is filled.
      LOG.error(
          "Cannot parse date  '{}' generated by the RomanDateParser: {}",
          yearMonthDay.asIso8601String(),
          ex.getMessage()
      );
      throw new RuntimeException(ex);
    } catch (ParseException pe) {
      throw pe;
    }
  }
}
